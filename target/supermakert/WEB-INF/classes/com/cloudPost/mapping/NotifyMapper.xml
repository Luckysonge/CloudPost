<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloudPost.dao.NotifyMapper" >
  <resultMap id="BaseResultMap" type="com.cloudPost.entity.Notify" >
    <id column="notifyID" property="notifyid" jdbcType="INTEGER" />
    <result column="userID" property="userid" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="isComment" property="iscomment" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="letterID" property="letterid" jdbcType="INTEGER" />
    <result column="readed" property="readed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    notifyID, userID, time, isComment, source, letterID, readed
  </sql>
  <select id="selectByUserid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from notify
    where userID = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notify
    where notifyID = #{notifyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notify
    where notifyID = #{notifyid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cloudPost.entity.Notify" >
    insert into notify (notifyID, userID, time, 
      isComment, source, letterID, 
      readed)
    values (#{notifyid,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{iscomment,jdbcType=INTEGER}, #{source,jdbcType=VARCHAR}, #{letterid,jdbcType=INTEGER}, 
      #{readed,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cloudPost.entity.Notify" >
    insert into notify
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="notifyid != null" >
        notifyID,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="iscomment != null" >
        isComment,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="letterid != null" >
        letterID,
      </if>
      <if test="readed != null" >
        readed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="notifyid != null" >
        #{notifyid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="iscomment != null" >
        #{iscomment,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="letterid != null" >
        #{letterid,jdbcType=INTEGER},
      </if>
      <if test="readed != null" >
        #{readed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloudPost.entity.Notify" >
    update notify
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="iscomment != null" >
        isComment = #{iscomment,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="letterid != null" >
        letterID = #{letterid,jdbcType=INTEGER},
      </if>
      <if test="readed != null" >
        readed = #{readed,jdbcType=INTEGER},
      </if>
    </set>
    where notifyID = #{notifyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloudPost.entity.Notify" >
    update notify
    set userID = #{userid,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      isComment = #{iscomment,jdbcType=INTEGER},
      source = #{source,jdbcType=VARCHAR},
      letterID = #{letterid,jdbcType=INTEGER},
      readed = #{readed,jdbcType=INTEGER}
    where notifyID = #{notifyid,jdbcType=INTEGER}
  </update>
</mapper>